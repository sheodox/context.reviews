generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Phrase {
  /// The value of this field is generated by the database as: `uuid_generate_v4()`.
  id        String    @id @default(dbgenerated())
  phrase    String
  /// The value of this field is generated by the database as: `timezone('utc'::text, now())`.
  createdAt DateTime  @default(dbgenerated())
  deleted   Boolean   @default(false)
  deletedAt DateTime?
  userId    String

  @@index([userId, phrase], name: "IDX_35ca8e413bbbdfc7a313e0a8bd")
  @@index([userId, deleted], name: "IDX_e499462bf68bdfea3f867f186c")

  @@map("phrases")
}

model Settings {
  /// The value of this field is generated by the database as: `uuid_generate_v4()`.
  id                  String  @id @default(dbgenerated())
  speechSynthesis     Boolean
  autoSpeechSynthesis Boolean
  userId              String? @unique
  user                User?  @relation(fields: [userId], references: [id])

  @@map("settings")
}

model User {
  /// The value of this field is generated by the database as: `uuid_generate_v4()`.
  id            String    @id @default(dbgenerated())
  oauthId       String    @unique
  displayName   String
  profileImage  String
  /// The value of this field is generated by the database as: `timezone('utc'::text, now())`.
  createdAt     DateTime  @default(dbgenerated())
  oauthProvider String
  raw           String
  settings      Settings?

  @@map("users")
}
