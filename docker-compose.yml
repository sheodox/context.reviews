version: '3.7'
services:
  app:
    build:
      context: .
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    volumes:
      # export location for data and usage stats
      - type: bind
        source: ./stats
        target: /usr/src/app/stats
  postgres:
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: $PGUSER
      POSTGRES_PASSWORD: $PGPASSWORD
      POSTGRES_DB: $PGDATABASE
    volumes:
      - type: volume
        source: postgres
        target: /var/lib/postgresql/data
        volume:
          nocopy: true
      - type: bind
        source: ./config/postgres
        target: /docker-entrypoint-initdb.d/
    restart: unless-stopped
  redis:
    image: redis:6-alpine
    command: redis-server --appendonly yes
    volumes:
      - type: volume
        source: redis
        target: /data
        volume:
          nocopy: true
    restart: unless-stopped
  nginx:
    image: nginx:1.18
    ports:
      - 80:80
      - 443:443
    depends_on:
      - app
    restart: unless-stopped
    volumes:
      # static error pages, give to nginx to show nice error pages even when the server is down
      - type: bind
        source: ./public
        target: /var/www/static
        read_only: true
  prometheus:
    image: prom/prometheus:latest
    ports:
      - 9090:9090
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus:/prometheus
  grafana:
    image: grafana/grafana:latest
    ports:
      - 3000:3000
    volumes:
      - ./config/grafana/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
      - grafana:/var/lib/grafana
volumes:
  postgres:
  redis:
  prometheus:
  grafana:
